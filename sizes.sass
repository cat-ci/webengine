// _cx-fallbacks.scss

// 1) your shorthand â†’ real-property map
$cx-props: (
  p:        padding,
  pt:       padding-top,
  pr:       padding-right,
  pb:       padding-bottom,
  pl:       padding-left,
  px:       (padding-left, padding-right),
  py:       (padding-top, padding-bottom),
  m:        margin,
  mt:       margin-top,
  mr:       margin-right,
  mb:       margin-bottom,
  ml:       margin-left,
  mx:       (margin-left, margin-right),
  my:       (margin-top, margin-bottom),

  // Sizing
  w:        width,
  h:        height,
  minW:     min-width,
  maxW:     max-width,
  minH:     min-height,
  maxH:     max-height,

  // Flex/Grid
  fg:       flex-grow,
  fsh:      flex-shrink,
  fb:       flex-basis,
  order:    order,
  gtc:      grid-template-columns,
  gtr:      grid-template-rows,
  gac:      grid-auto-columns,
  gar:      grid-auto-rows,
  gc:       grid-column,
  gr:       grid-row,
  gap:      gap,
  rg:       row-gap,
  cg:       column-gap,

  // Positioning
  z:        z-index,
  top:      top,
  right:    right,
  bottom:   bottom,
  left:     left,
  inset:    inset,

  // Typography
  fs:       font-size,
  lh:       line-height,
  ls:       letter-spacing,
  ws:       word-spacing,
  ti:       text-indent,

  // Border
  bw:       border-width,
  btw:      border-top-width,
  brw:      border-right-width,
  bbw:      border-bottom-width,
  blw:      border-left-width,
  br:       border-radius,

  // Outline
  ow:       outline-width,
  oo:       outline-offset,

  // Shadow/Filter
  bxsh:     box-shadow,
  filter:   filter,
  bdf:      backdrop-filter,

  // Transition/Animation
  tdur:     transition-duration,
  tdly:     transition-delay,
  adur:     animation-duration,
  adel:     animation-delay,
  ait:      animation-iteration-count,

  // Opacity
  op:       opacity,

  // Misc
  strokeW:  stroke-width
);

// 2) units we want to generate
$units: px, rem, em, '%';

// 3) loop through sizes, units, shorthands
@for $i from 1 through 50 {
  @each $unit in $units {
    @each $key, $props in $cx-props {
      // normalize props to a list
      $prop-list: if(
        type-of($props) == 'list',
        $props,
        ($props)
      );

      // output the attribute selector
      [cx~="#{$key}:#{$i}#{$unit}"] {
        @each $prop in $prop-list {
          #{$prop}: #{$i}#{$unit} !important;
        }
      }
    }
  }
}
