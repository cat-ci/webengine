/*
          _____                    _____                    _____          
         /\    \                  /\    \                  /\    \         
        /::\    \                /::\____\                /::\    \        
       /::::\    \              /:::/    /               /::::\    \       
      /::::::\    \            /:::/   _/___            /::::::\    \      
     /:::/\:::\    \          /:::/   /\    \          /:::/\:::\    \     
    /:::/  \:::\    \        /:::/   /::\____\        /:::/__\:::\    \    
   /:::/    \:::\    \      /:::/   /:::/    /       /::::\   \:::\    \   
  /:::/    / \:::\    \    /:::/   /:::/   _/___    /::::::\   \:::\    \  
 /:::/    /   \:::\    \  /:::/___/:::/   /\    \  /:::/\:::\   \:::\    \ 
/:::/____/     \:::\____\|:::|   /:::/   /::\____\/:::/__\:::\   \:::\____\
\:::\    \      \::/    /|:::|__/:::/   /:::/    /\:::\   \:::\   \::/    /
 \:::\    \      \/____/  \:::\/:::/   /:::/    /  \:::\   \:::\   \/____/ 
  \:::\    \               \::::::/   /:::/    /    \:::\   \:::\    \     
   \:::\    \               \::::/___/:::/    /      \:::\   \:::\____\    
    \:::\    \               \:::\__/:::/    /        \:::\   \::/    /    
     \:::\    \               \::::::::/    /          \:::\   \/____/     
      \:::\    \               \::::::/    /            \:::\    \         
       \:::\____\               \::::/    /              \:::\____\        
        \::/    /                \::/____/                \::/    /        
         \/____/                  ~~                       \/____/         
https://catci.net
https://github.com/cat-ci
Version: 3.1.5
License: MIT
This file is part of Catci's Web Engine.*/

/*colour pallete*/
document.addEventListener("DOMContentLoaded",(()=>{let e=function(){let e=new Set,t=getComputedStyle(document.documentElement);for(let n=0;n<t.length;n++){let o=t[n];o.startsWith("--")&&e.add(o.slice(2))}for(let t of document.styleSheets){let n;try{n=t.cssRules}catch(e){continue}for(let t of n)if(t.selectorText&&t.selectorText.toLowerCase().split(",").some((e=>":root"===e.trim())))for(let n=0;n<t.style.length;n++){let o=t.style[n];o.startsWith("--")&&e.add(o.slice(2))}}return e}(),t={p:"padding",pt:"paddingTop",pr:"paddingRight",pb:"paddingBottom",pl:"paddingLeft",px:["paddingLeft","paddingRight"],py:["paddingTop","paddingBottom"],m:"margin",mt:"marginTop",mr:"marginRight",mb:"marginBottom",ml:"marginLeft",mx:["marginLeft","marginRight"],my:["marginTop","marginBottom"],w:"width",h:"height",minW:"minWidth",maxW:"maxWidth",minH:"minHeight",maxH:"maxHeight",boxS:"boxSizing",z:"zIndex",pos:"position",top:"top",right:"right",bottom:"bottom",left:"left",inset:"inset",display:"display",float:"float",clear:"clear",flex:"flex",fd:"flexDirection",fg:"flexGrow",fsh:"flexShrink",fb:"flexBasis",fwr:"flexWrap",order:"order",ai:"alignItems",ac:"alignContent",as:"alignSelf",jc:"justifyContent",jis:"justifyItems",js:"justifySelf",gtc:"gridTemplateColumns",gtr:"gridTemplateRows",gac:"gridAutoColumns",gar:"gridAutoRows",gaf:"gridAutoFlow",gc:"gridColumn",gr:"gridRow",gap:"gap",rg:"rowGap",cg:"columnGap",c:"color",fs:"fontSize",ff:"fontFamily",fwght:"fontWeight",fst:"fontStretch",fa:"fontStyle",fv:"fontVariant",lh:"lineHeight",ti:"textIndent",ta:"textAlign",tt:"textTransform",td:"textDecoration",tdc:"textDecorationColor",tdl:"textDecorationLine",tds:"textDecorationStyle",tdt:"textDecorationThickness",tuo:"textUnderlineOffset",ts:"textShadow",ls:"letterSpacing",ws:"wordSpacing",wbrk:"wordBreak",wrp:"whiteSpace",tr:"textRendering",to:"textOrientation",bg:"background",bgc:"backgroundColor",bgi:"backgroundImage",bgp:"backgroundPosition",bgs:"backgroundSize",bgr:"backgroundRepeat",bga:"backgroundAttachment",bgo:"backgroundOrigin",bgcp:"backgroundClip",bd:"border",bs:"borderStyle",bw:"borderWidth",bc:"borderColor",br:"borderRadius",bdt:"borderTop",bdr:"borderRight",bdb:"borderBottom",bdl:"borderLeft",btw:"borderTopWidth",brw:"borderRightWidth",bbw:"borderBottomWidth",blw:"borderLeftWidth",btc:"borderTopColor",brc:"borderRightColor",bbc:"borderBottomColor",blc:"borderLeftColor",bts:"borderTopStyle",brs:"borderRightStyle",bbs:"borderBottomStyle",bls:"borderLeftStyle",o:"outline",ow:"outlineWidth",oc:"outlineColor",os:"outlineStyle",oo:"outlineOffset",bxsh:"boxShadow",filter:"filter",bdf:"backdropFilter",transition:"transition",tp:"transitionProperty",tdur:"transitionDuration",tf:"transitionTimingFunction",tdly:"transitionDelay",animation:"animation",an:"animationName",adur:"animationDuration",afn:"animationTimingFunction",adel:"animationDelay",adir:"animationDirection",ait:"animationIterationCount",aplay:"animationPlayState",afill:"animationFillMode",tfm:"transform",tfo:"transformOrigin",persp:"perspective",perspO:"perspectiveOrigin",visibility:"visibility",cur:"cursor",op:"opacity",pe:"pointerEvents",touch:"touchAction",udrag:"userDrag",us:"userSelect",sb:"scrollBehavior",snap:"scrollSnapType",snapA:"scrollSnapAlign",ov:"overflow",ofx:"overflowX",ofy:"overflowY",ovw:"overflowWrap",of:"objectFit",opos:"objectPosition",ls:"listStyle",lstt:"listStyleType",lsti:"listStyleImage",lstp:"listStylePosition",bcsp:"borderCollapse",bscp:"borderSpacing",tsl:"tableLayout",cap:"captionSide",ec:"emptyCells",col:"columns",colC:"columnCount",colF:"columnFill",cr:"columnRule",crc:"columnRuleColor",crs:"columnRuleStyle",crw:"columnRuleWidth",cosp:"columnSpan",dir:"direction",ub:"unicodeBidi",wm:"writingMode",cp:"clipPath",mask:"mask",sh:"shapeOutside",maskC:"maskClip",maskO:"maskOrigin",maskS:"maskSize",iso:"isolation",blend:"mixBlendMode",will:"willChange",contain:"contain",fill:"fill",stroke:"stroke",strokeW:"strokeWidth"},n={dn:[["display","none"]],db:[["display","block"]],di:[["display","inline"]],dib:[["display","inline-block"]],dg:[["display","grid"]],dig:[["display","inline-grid"]],dt:[["display","table"]],dtr:[["display","table-row"]],dtc:[["display","table-cell"]],"bs-bb":[["box-sizing","border-box"]],"bs-cb":[["box-sizing","content-box"]],r:[["display","flex"],["flex-direction","row"]],c:[["display","flex"],["flex-direction","column"]],ir:[["display","inline-flex"],["flex-direction","row"]],ic:[["display","inline-flex"],["flex-direction","column"]],js:[["justify-content","flex-start"]],je:[["justify-content","flex-end"]],jc:[["justify-content","center"]],jsb:[["justify-content","space-between"]],jsa:[["justify-content","space-around"]],jse:[["justify-content","space-evenly"]],ais:[["align-items","stretch"]],aie:[["align-items","flex-end"]],aic:[["align-items","center"]],aib:[["align-items","baseline"]],acfs:[["align-content","flex-start"]],ace:[["align-content","flex-end"]],acc:[["align-content","center"]],acsb:[["align-content","space-between"]],acsa:[["align-content","space-around"]],acse:[["align-content","space-evenly"]],asfs:[["align-self","flex-start"]],asfe:[["align-self","flex-end"]],asc:[["align-self","center"]],asb:[["align-self","baseline"]],ass:[["align-self","stretch"]],fnw:[["flex-wrap","nowrap"]],fw:[["flex-wrap","wrap"]],fwr:[["flex-wrap","wrap-reverse"]],rel:[["position","relative"]],abs:[["position","absolute"]],fix:[["position","fixed"]],stk:[["position","sticky"]],fl:[["float","left"]],fr:[["float","right"]],fn:[["float","none"]],cl:[["clear","left"]],cr:[["clear","right"]],cb:[["clear","both"]],oh:[["overflow","hidden"]],oa:[["overflow","auto"]],os:[["overflow","scroll"]],ov:[["overflow","visible"]],ocl:[["overflow","clip"]],resize:[["resize","both"]],"resize-n":[["resize","none"]],vs:[["visibility","visible"]],vh:[["visibility","hidden"]],vc:[["visibility","collapse"]],ce:[["contentEditable","true"]],"ce-n":[["contentEditable","false"]],tw:[["overflow-wrap","break-word"],["word-break","break-word"]],"to-e":[["text-overflow","ellipsis"],["overflow","hidden"],["white-space","nowrap"]],tu:[["text-transform","uppercase"]],tl:[["text-transform","lowercase"]],tc:[["text-transform","capitalize"]],"ta-left":[["text-align","left"]],"ta-center":[["text-align","center"]],"ta-right":[["text-align","right"]],"ta-justify":[["text-align","justify"]],"td-u":[["text-decoration","underline"]],"td-lt":[["text-decoration","line-through"]],"td-n":[["text-decoration","none"]],"ws-nw":[["white-space","nowrap"]],"ws-n":[["white-space","normal"]],"ws-pre":[["white-space","pre"]],"ws-pw":[["white-space","pre-wrap"]],"ws-pl":[["white-space","pre-line"]],b:[["font-weight","bold"]],i:[["font-style","italic"]],"bg-none":[["background","none"]],"bg-init":[["background","initial"]],"b-none":[["border","none"]],"b-init":[["border","initial"]],"o-none":[["outline","none"]],"o-init":[["outline","initial"]],"cur-p":[["cursor","pointer"]],"cur-d":[["cursor","default"]],"cur-na":[["cursor","not-allowed"]],"op-0":[["opacity","0"]],"op-1":[["opacity","1"]],"ls-n":[["list-style","none"]],"ls-i":[["list-style","initial"]],"us-n":[["user-select","none"]],"us-a":[["user-select","auto"]],"us-t":[["user-select","text"]],"us-all":[["user-select","all"]],"pe-n":[["pointer-events","none"]],"pe-a":[["pointer-events","auto"]],df:[["display","flex"]],dgap0:[["gap","0"]],dgap1:[["gap","1rem"]],fg1:[["flex-grow","1"]],fs1:[["flex-shrink","1"]],fb0:[["flex-basis","0"]],ac:[["align-content","center"]],as:[["align-self","stretch"]],ai:[["align-items","initial"]],jcfs:[["justify-content","flex-start"]],jcfe:[["justify-content","flex-end"]],nowrap:[["white-space","nowrap"]],break:[["word-break","break-all"]],pre:[["white-space","pre"]],ellipsis:[["text-overflow","ellipsis"],["overflow","hidden"],["white-space","nowrap"]],pointer:[["cursor","pointer"]],notallowed:[["cursor","not-allowed"]],auto:[["cursor","auto"]],hidden:[["visibility","hidden"]],visible:[["visibility","visible"]],scroll:[["overflow","scroll"]],clip:[["overflow","clip"]],sticky:[["position","sticky"]],fixed:[["position","fixed"]],absolute:[["position","absolute"]],relative:[["position","relative"]],static:[["position","static"]],sronly:[["position","absolute"],["width","1px"],["height","1px"],["padding","0"],["margin","-1px"],["overflow","hidden"],["clip","rect(0,0,0,0)"],["white-space","nowrap"],["border","0"]],clearfix:[["content",'""'],["display","table"],["clear","both"]],dflex:[["display","flex"]],dgrid:[["display","grid"]],dcontents:[["display","contents"]],fdr:[["display","flex"],["flex-direction","row"]],fdc:[["display","flex"],["flex-direction","column"]],fjc:[["justify-content","center"]],faci:[["align-items","center"]],fac:[["align-content","center"]],fas:[["align-self","stretch"]],gac:[["grid-auto-columns","auto"]],gar:[["grid-auto-rows","auto"]],gaf:[["grid-auto-flow","row"]],oxh:[["overflow-x","hidden"]],oxy:[["overflow-y","hidden"]],oxa:[["overflow-x","auto"]],oya:[["overflow-y","auto"]],"select-none":[["user-select","none"]],"select-text":[["user-select","text"]],"select-all":[["user-select","all"]],"select-auto":[["user-select","auto"]],"sr-only":[["position","absolute"],["width","1px"],["height","1px"],["padding","0"],["margin","-1px"],["overflow","hidden"],["clip","rect(0,0,0,0)"],["white-space","nowrap"],["border","0"]],truncate:[["text-overflow","ellipsis"],["overflow","hidden"],["white-space","nowrap"]]},o={cx:[...Object.keys(t),...Object.keys(n)],font:["fs","fwght","c","ff","lh","ti"],bg:["bg","bgc","bgi","bgp","bgs","bgr"],layout:["df","dg","pos","row","col","inline-row","inline-col"],bd:["br","bw","bc","bs","o"],size:["w","h","minW","maxW","minH","maxH","z"],spacing:["m","mt","mr","mb","ml","mx","my","p","pt","pr","pb","pl","px","py"],flex:["fd","fg","fb","fa","fw","jc","jsb","jsa","jse","ais","aie","aic","aib","acfs","ace","acc","acsb","acsa","acse","asfs","asfe","asc","asb","ass"],grid:["gtc","gtr","gap","ga","gc","gr"],effect:["bxsh","filter","op"],misc:["cur","op","ls","us","pe","ov"]},i=Object.keys(o),r=/([a-zA-Z0-9-]+)\s*:\s*([^;]+)\s*(?:;|$)/g,s=/\b(hover|focus|active|disabled|checked)\s*{([^}]*)}/gi,l=document.getElementById("catci");l||((l=document.createElement("style")).id="catci",document.head.appendChild(l));let a=l.sheet;function c(t){return function(e){let t=[],n="",o=0,i=!1,r=!1,s=!1;for(let l of e)s?(n+=l,s=!1):"\\"!==l?(i||r||"("!==l?i||r||")"!==l?i||'"'!==l?r||"'"!==l||(i=!i):r=!r:o--:o++,!/\s/.test(l)||i||r||0!==o?n+=l:n&&(t.push(n),n="")):(n+=l,s=!0);return n&&t.push(n),t}(t.trim()).map((t=>e.has(t)?`var(--${t})`:t)).join(" ")}function d(e,n){let o,i=[];for(r.lastIndex=0;o=r.exec(e);){let e=o[1].trim(),r=o[2].trim();if(!n.has(e))continue;let s=t[e];if(!s)continue;let l=r,a=!1;l.endsWith("!")&&(a=!0,l=l.slice(0,-1).trim());let d=c(l);(Array.isArray(s)?s:[s]).forEach((e=>{let t=e.replace(/([A-Z])/g,"-$1").toLowerCase(),n="background-image"!==t||/^url\(/i.test(d)?d:`url(${d})`;i.push(`${t}: ${n}${a?" !important":""}`)}))}return i}function f(e,t){return e.split(/\s+/).filter((e=>t.has(e)&&n[e])).flatMap((e=>n[e].map((([e,t])=>`${e}: ${t}`))))}function u(e,t){let n=d(e,t);return[...f(e.replace(r," "),t),...n]}function m(e,t){let n=[],o=[],i=0,r="";for(;i<e.length;)if(">"===e[i]){r&&(o.push(r),r="");let s=i+1;for(;/\s/.test(e[s]);)s++;let l=s;for(;s<e.length&&"{"!==e[s];)s++;let a=e.slice(l,s).trim(),c=0,d=s;do{"{"===e[d]?c++:"}"===e[d]&&c--,d++}while(d<e.length&&c>0);let f=m(e.slice(s+1,d-1),t),h=u(f.cleaned.join(""),t);h.length&&n.push({suffix:` > ${a}`,decls:h}),f.rules.forEach((e=>{n.push({suffix:` > ${a}`+e.suffix,decls:e.decls})})),i=d}else r+=e[i++];return r&&o.push(r),{cleaned:o,rules:n}}let h=0;document.querySelectorAll("[cx], [font], [bg], [layout], [bd], [size], [spacing], [flex], [grid], [effect], [misc]").forEach((e=>{let t=e.getAttributeNames().filter((e=>i.includes(e)));if(!t.length||t.length>1&&(e.removeAttribute(t[0]),!(t=t.slice(1)).length))return;let n=new Set;t.forEach((e=>o[e].forEach((e=>n.add(e)))));let r,l=t.map((t=>e.getAttribute(t))).join(" "),c={hover:[],focus:[],active:[],disabled:[],checked:[]};for(s.lastIndex=0;r=s.exec(l);)c[r[1].toLowerCase()].push(r[2]);let d=l.replace(s,""),{cleaned:f,rules:p}=m(d,n),g=u(f.join(""),n);if(!g.length&&!p.length&&!Object.values(c).some((e=>e.length)))return;h++;let b=`catci-${h}`;e.classList.add(b),g.length&&a.insertRule(`.${b} { ${g.join("; ")} }`,a.cssRules.length),p.forEach((e=>{a.insertRule(`.${b}${e.suffix} { ${e.decls.join("; ")} }`,a.cssRules.length)})),Object.entries(c).forEach((([e,t])=>{t.forEach((t=>{let o=u(t,n);o.length&&a.insertRule(`.${b}:${e} { ${o.join("; ")} }`,a.cssRules.length)}))}))})),window.extractbuiltcss=()=>{let e=document.getElementById("catci");if(!e)return console.warn("no #catci sheet");let t="";for(let n of e.sheet.cssRules)t+=n.cssText+"\n";console.log(t.trim())}})),function(){function e(e,t,n,o){const i=t.getBoundingClientRect(),r=window.scrollY||document.documentElement.scrollTop,s=window.scrollX||document.documentElement.scrollLeft;"follow"===o&&n?(e.style.left=n.pageX+10+"px",e.style.top=n.pageY+10+"px"):"above"===o?(e.style.left=s+i.left+i.width/2-e.offsetWidth/2+"px",e.style.top=r+i.top-e.offsetHeight-8+"px"):"under"===o?(e.style.left=s+i.left+i.width/2-e.offsetWidth/2+"px",e.style.top=r+i.bottom+8+"px"):"left"===o?(e.style.left=s+i.left-e.offsetWidth-8+"px",e.style.top=r+i.top+i.height/2-e.offsetHeight/2+"px"):"right"===o&&(e.style.left=s+i.right+8+"px",e.style.top=r+i.top+i.height/2-e.offsetHeight/2+"px")}document.addEventListener("DOMContentLoaded",(function(){const t=function(){const e=document.querySelector("config");if(!e)return{};const t={};return e.querySelectorAll('define[feature="tooltip"]').forEach((e=>{const n=e.getAttribute("name")||"default",o=e.querySelector('style[name="tooltip"]');let i="";o&&(i=o.textContent.replace(/tooltip\s*{/,`.tooltip-${n} {`).replace(/}/,"}"));const r=e.querySelector("placement[mode]"),s=r?.getAttribute("mode")||"follow";t[n]={styleText:i,placement:s}})),t}();t.default&&(function(e){Object.entries(e).forEach((([e,t])=>{if(!t.styleText)return;const n=`tooltip-style-${e}`;if(document.getElementById(n))return;const o=document.createElement("style");o.id=n,o.textContent=t.styleText,document.head.appendChild(o)}))}(t),document.querySelectorAll("[tooltip]").forEach((n=>{let o=null;const i=n.getAttribute("tooltip-config")||"default",r=t[i]||t.default,s=`tooltip-${i}`;function l(t){const i=function(){const e=n.getAttribute("tooltip");return"{aria}"===e?n.getAttribute("aria-label")||"":e}();i&&(o||(o=document.createElement("div"),o.className=`tooltip ${s}`,o.textContent=i,document.body.appendChild(o),e(o,n,t,r.placement),"follow"===r.placement&&document.addEventListener("mousemove",a)))}function a(t){o&&e(o,n,t,r.placement)}function c(){o&&("follow"===r.placement&&document.removeEventListener("mousemove",a),o.remove(),o=null)}n.addEventListener("mouseenter",l),n.addEventListener("mouseleave",c),n.addEventListener("focus",l),n.addEventListener("blur",c)})))}))}(),function(){let e=!1;document.addEventListener("DOMContentLoaded",(async function(){if(e)return;e=!0;const t=document.querySelectorAll("config[src]"),n=Array.from(t).map((async e=>{const t=e.getAttribute("src");try{const n=await fetch(t);if(!n.ok)throw new Error(`Failed to load ${t}`);const o=await n.text();e.innerHTML=o}catch(t){e.innerHTML=`<span style="color:red;">Error: ${t.message}</span>`}}));await Promise.all(n);const o=new Event("DOMContentLoaded",{bubbles:!0,cancelable:!0});document.dispatchEvent(o)}))}(),function(){const e=new Promise(((e,t)=>{if(window.THREE)e();else{let n=document.createElement("script");n.src="https://cdn.jsdelivr.net/npm/three@0.132.2/build/three.min.js",n.onload=()=>e(),n.onerror=()=>t(Error("Failed to load Three.js")),document.head.appendChild(n)}}));class t extends HTMLElement{constructor(){super(),this._shadow=this.attachShadow({mode:"open"});let e=document.createElement("style");e.textContent="\n          :host { display: block; position: relative; }\n          canvas { width: 100%; height: 100%; display: block; }\n        ",this._shadow.appendChild(e),this._canvas=document.createElement("canvas"),this._shadow.appendChild(this._canvas)}async connectedCallback(){await e,this._readAttributes(),this._initThree()}disconnectedCallback(){this._resizeObserver&&this._resizeObserver.disconnect()}_readAttributes(){if(this._normalSrc=this.getAttribute("normal-src"),this._colorSrc=this.getAttribute("color-src"),!this._normalSrc||!this._colorSrc)return void console.error('<normal-img> requires both "normal-src" and "color-src".');let e=document.querySelector('define[feature="normal-images"][enabled="true"] define[defaults]'),t=[0,0,2],n=.5,o=.2,i="#ffffff",r=1,s=0;if(e){let l=t=>e.querySelector(t)?.getAttribute("value");l("light")&&(t=l("light").split(",").map((e=>parseFloat(e)))),l("intensity")&&(n=parseFloat(l("intensity"))),l("opacity")&&(o=parseFloat(l("opacity"))),l("light-color")&&(i=l("light-color")),l("roughness")&&(r=parseFloat(l("roughness"))),l("metalness")&&(s=parseFloat(l("metalness")))}let l=e=>this.getAttribute(e);this._light=l("light")?l("light").split(",").map((e=>parseFloat(e))):t,this._intensity=l("intensity")?parseFloat(l("intensity")):n,this._opacity=l("opacity")?parseFloat(l("opacity")):o,this._lightColor=l("light-color")||i,this._roughness=l("roughness")?parseFloat(l("roughness")):r,this._metalness=l("metalness")?parseFloat(l("metalness")):s}_initThree(){let e=window.THREE;this._renderer=new e.WebGLRenderer({canvas:this._canvas,alpha:!0,antialias:!0}),this._scene=new e.Scene,this._camera=new e.OrthographicCamera,this._scene.add(this._camera);let t,n,o=new e.TextureLoader,i=()=>{t&&n&&(this._setupScene(t,n),this._setupResizeObserver(),this._onResize())};o.load(this._colorSrc,(e=>{t=e,i()})),o.load(this._normalSrc,(e=>{n=e,i()}))}_setupScene(e,t){let n=window.THREE;this._colorMat=new n.MeshBasicMaterial({map:e}),this._shadeMat=new n.MeshStandardMaterial({color:16777215,metalness:this._metalness,roughness:this._roughness,normalMap:t,normalScale:new n.Vector2(this._intensity,this._intensity),transparent:!0,opacity:this._opacity,depthWrite:!1});let o=new n.PlaneGeometry(1,1);this._meshColor=new n.Mesh(o,this._colorMat),this._meshShade=new n.Mesh(o,this._shadeMat),this._meshShade.position.z=.01,this._scene.add(this._meshColor),this._scene.add(this._meshShade);let i=new n.DirectionalLight(new n.Color(this._lightColor),1);i.position.set(...this._light),this._scene.add(i)}_setupResizeObserver(){this._resizeObserver||(this._resizeObserver=new ResizeObserver((()=>this._onResize())),this._resizeObserver.observe(this))}_onResize(){let e=this.clientWidth,t=this.clientHeight;if(0===e||0===t)return;let n=window.devicePixelRatio||1;this._renderer.setSize(Math.floor(e*n),Math.floor(t*n),!1),this._camera.left=-e/2,this._camera.right=e/2,this._camera.top=t/2,this._camera.bottom=-t/2,this._camera.near=-1e3,this._camera.far=1e3,this._camera.position.z=100,this._camera.updateProjectionMatrix(),this._meshColor.scale.set(e,t,1),this._meshShade.scale.set(e,t,1),this._renderer.render(this._scene,this._camera)}}customElements.define("normal-img",t)}(),function(){class e extends HTMLElement{static get observedAttributes(){return["name","weight"]}constructor(){super(),this.ensureFontAwesomeLoaded()}connectedCallback(){this.render()}attributeChangedCallback(){this.render()}ensureFontAwesomeLoaded(){if(![...document.styleSheets].some((e=>e.href&&e.href.includes("font-awesome/6.5.0/css/all.min.css")))){const e=document.createElement("link");e.rel="stylesheet",e.href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css",e.crossOrigin="anonymous",document.head.appendChild(e)}}render(){const e=this.getAttribute("name")||"",t={solid:"fa-solid",regular:"fa-regular",brands:"fa-brands",light:"fa-light",thin:"fa-thin",duotone:"fa-duotone"}[this.getAttribute("weight")||"solid"]||"fa-solid";this.innerHTML=`<i class="${t} fa-${e}"></i>`}}customElements.define("catci-icon",e)}(),function(){function e(e){return new Promise(((t,n)=>{const o=document.createElement("script");o.src=e,o.onload=t,o.onerror=n,document.head.appendChild(o)}))}!async function(){const t=["https://cdn.jsdelivr.net/npm/markdown-it/dist/markdown-it.min.js","https://cdn.jsdelivr.net/npm/markdown-it-footnote/dist/markdown-it-footnote.min.js","https://cdn.jsdelivr.net/npm/markdown-it-deflist/dist/markdown-it-deflist.min.js","https://cdn.jsdelivr.net/npm/markdown-it-task-lists/dist/markdown-it-task-lists.min.js","https://cdn.jsdelivr.net/npm/markdown-it-emoji/dist/markdown-it-emoji.min.js"];for(const n of t)try{await e(n)}catch(e){return void console.error("Failed to load script:",n,e)}const n=window.markdownit({html:!0,linkify:!0,typographer:!0}).use(window.markdownitFootnote).use(window.markdownitDeflist).use(window.markdownitTaskLists,{enabled:!0,label:!0}).use(window.markdownitEmoji),o=document.querySelectorAll('ext[lang="markdown"]');await Promise.all(Array.from(o).map((async e=>{let t;const o=e.getAttribute("src");if(o)try{const e=await fetch(o);if(!e.ok)throw new Error(e.statusText);t=await e.text()}catch(e){console.error("Failed to fetch markdown:",o,e),t=`Error loading ${o}: ${e.message}`}else t=e.textContent;e.innerHTML=n.render(t),e.querySelectorAll("a").forEach((e=>{e.target="_blank",e.rel="noopener noreferrer"}))})));const i=document.querySelectorAll('ext[lang="csv"]');await Promise.all(Array.from(i).map((async e=>{let t="";const n=e.getAttribute("src");if(n)try{const e=await fetch(n);if(!e.ok)throw new Error(e.statusText);t=await e.text()}catch(t){return console.error("Failed to load CSV:",n,t),void(e.innerHTML='<span style="color:red">Failed to load CSV</span>')}else t=e.textContent;const o=function(e){const t=document.createElement("table");return e.forEach(((e,n)=>{const o=document.createElement("tr");e.forEach((e=>{const t=0===n?document.createElement("th"):document.createElement("td");t.textContent=e,o.appendChild(t)})),t.appendChild(o)})),t}(t.trim().split("\n").map((e=>e.split(",").map((e=>e.trim())))));e.innerHTML="",e.appendChild(o)})));const r={description(e){const t=document.createElement("p");return t.textContent=e.textContent,t},author(e){const t=document.createElement("address");return t.textContent=e.textContent,t},category(e){const t=document.createElement("span");return t.className="rss-category",t.textContent=e.textContent,t},comments(e){const t=document.createElement("a");return t.href=e.textContent,t.textContent="Comments",t},enclosure(e){const t=e.getAttribute("url")||"",n=e.getAttribute("type")||"";if(n.startsWith("audio")){const e=document.createElement("audio");return e.controls=!0,e.src=t,e}if(n.startsWith("video")){const e=document.createElement("video");return e.controls=!0,e.src=t,e}return document.createElement("span")},guid(e){const t=document.createElement("meta");return t.name="rss-guid",t.content=e.textContent,t},pubDate(e){const t=document.createElement("time");return t.dateTime=new Date(e.textContent).toISOString(),t.textContent=e.textContent,t},source(e){const t=document.createElement("cite"),n=e.getAttribute("url");if(n){const o=document.createElement("a");o.href=n,o.textContent=e.textContent,t.appendChild(o)}else t.textContent=e.textContent;return t}};document.querySelectorAll('ext[lang="rss"]').forEach((e=>{const t=()=>{const t=e.getAttribute("src");if(!t)return;const n=Math.random().toString(36).slice(2);fetch(`${t}?=${n}`).then((e=>e.text())).then((t=>{const n=(new DOMParser).parseFromString(t,"application/xml"),o=Array.from(n.querySelectorAll("item"));e.innerHTML="",o.forEach((t=>{e.appendChild(function(e){const t=document.createElement("div");t.className="rss-item";const n=e.querySelector("title"),o=e.querySelector("link");if(n){const e=document.createElement("h3"),i=document.createElement("a");i.textContent=n.textContent,i.href=o?o.textContent:"#",e.appendChild(i),t.appendChild(e)}return Array.from(e.children).forEach((e=>{const n=e.nodeName.toLowerCase();if("title"===n||"link"===n)return;const o=r[n];o&&t.appendChild(o(e))})),t.querySelectorAll("a").forEach((e=>{e.target="_blank",e.rel="noopener noreferrer"})),t}(t))}))})).catch((t=>{console.error("RSS load error:",t),e.textContent="Failed to load RSS feed."}))};t(),setInterval(t,15e3)}))}()}(),function(){const e={".ttf":"truetype",".otf":"opentype",".woff":"woff",".woff2":"woff2",".eot":"embedded-opentype",".svg":"svg"};function t(t){const n=function(t){const n=t.match(/\.\w+$/);return n&&e[n[0].toLowerCase()]||""}(t.url),o=n?` format('${n}')`:"";return`\n    @font-face {\n      font-family: '${t.name}';\n      src: url('${t.url}')${o};\n      font-stretch: ${t.stretch};\n      font-style: ${t.style};\n      font-weight: ${t.weight};\n    }\n    `.trim()}function n(){const e=Array.from(document.querySelectorAll("define[font]"));if(!e.length)return;const n=e.map((e=>function(e){const t={name:"",url:"",stretch:"normal",style:"normal",weight:"normal"},n=e.match(/'([^']+)'/),o=e.match(/url\(([^)]+)\)/);n&&(t.name=n[1]),o&&(t.url=o[1]);const i=e.match(/stretch:\s*([^;]+)/),r=e.match(/style:\s*([^;]+)/),s=e.match(/weight:\s*([^;]+)/);return i&&(t.stretch=i[1].trim()),r&&(t.style=r[1].trim()),s&&(t.weight=s[1].trim()),t}(e.getAttribute("font")))).map(t).join("\n\n");let o=document.getElementById("fonts");o||(o=document.createElement("style"),o.id="fonts",document.head.appendChild(o)),o.textContent=n}"loading"===document.readyState?document.addEventListener("DOMContentLoaded",n):n()}();